<macros>

	<macro name="typeDocs()">
		::if docs != null::

			<!-- deprecated -->
			::if docs.deprecated::
				<span class="deprecated"><h4>This ::type:: is deprecated.</h4>::raw docs.deprecatedMsg::</span>
			::end::

			<!-- Comment block -->
			::if docs.comments != null::
				::raw docs.comments::
			::end::


			<!-- type params -->
			::if docs.typeParams.length != 0::
			<h4>Types</h4>
			<table >
				<tbody>
			::foreach pd docs.typeParams::
				<tr>
					<th><code>::pd.arg::</code></th>
					<td>::raw pd.desc::</td>
				</tr>
			::end::
			  </tbody>
			</table>
			::end::

			<!-- requires -->
			::if docs.requires.length != 0::
			<h4>Requires</h4>
			<table >
				<tbody>
			::foreach i docs.requires::
				<tr><th>::raw i::</th></tr>
			::end::
			 </tbody>
			</table>
			::end::

			<!-- see -->
			::if docs.see.length != 0::
			<h4>See Also</h4>
			<table >
				<tbody>
			::foreach i docs.see::
				<tr><th>::raw i::</th></tr>
			::end::
			</tbody>
			</table>
			::end::

			
			<!-- authors -->
			::if docs.authors.length != 0::
			<h4>Authors</h4>
			<table >
				<tbody>
			::foreach i docs.authors::
				<tr><th>::raw i::</th></tr>
			::end::
			</tbody>
			</table>
			::end::

			<!-- TODO block -->
			::if docs.todos.length != 0::
			<div class="todos">
				<h4>Todos:</h4>
				<ul>
					::foreach i docs.todos::
					<li>::raw i::</li>
					::end::
				</ul>
			</div>
			::end::

		
		::end::
	</macro>

	<macro name="methodHeader(m)">
		
		<h3>
		
			<a name="::raw m.name::()"></a>$$showAccess(::m::)$$showDynamic(::m::)$$showInline(::m::) function <span class="name">::raw m.name::</span>::m.params:: ( ::if m.args != null::::raw m.args::::end:: ) : ::raw m.returns::
		</h3>
		::if m.isOverride::
		<div class="overrides">&#x21b3; Overrides <a href="::raw m.inheritance.link.href::#::m.name::()">::raw m.inheritance.link.text::.::raw m.name::</a></div>
		::elseif m.isInherited::
		<div class="inherited">&#x21b3; Inherited from <a href="::raw m.inheritance.link.href::#::m.name::()">::raw m.inheritance.link.text::.::raw m.name::</a></div>
		::end::
	</macro>



	<macro name="methodDocs(m)">
	
	::if m.docs != null::

		<!-- deprecated -->
		::if m.docs.deprecated::
		<span class="deprecated"><h4>This ::m.type:: is deprecated.</h4>::raw m.docs.deprecatedMsg::</span>
		::end::

		<!-- Comment block -->
		::if m.docs.comments != null::
		<div class="comment">::raw m.docs.comments::</div>
		::end::


		<!-- type params -->
		::if m.docs.typeParams.length != 0::
		<h4>Types</h4>
		<table >
			<tbody>
		::foreach pd m.docs.typeParams::
			<tr>
				<th><code>::pd.arg::</code></th>
				<td>::raw pd.desc::</td>
			</tr>
		::end::
		  </tbody>
		</table>
		::end::
		<!-- method call parameters -->
		::if m.docs.params.length != 0::
		<h4>Parameters</h4>
		<table >
			<tbody>
		::foreach pd m.docs.params::
			<tr>
				<th><code>::pd.arg::</code></th>
				<td>::raw pd.desc::</td>
			</tr>
		::end::
		  </tbody>
		</table>
		::end::
		<!-- method return types comments -->
		::if m.docs.returns.length != 0::
		<h4>Returns</h4>
		<table >
		<tbody>
			
			<tr>
				<th>::raw m.returns::</th>
				::foreach s m.docs.returns::
				<td>::raw s::</td>
				::end::
			</tr>

			
		</tbody>
		</table>
		::end::

		<!-- method throws -->
		::if m.docs.throws.length != 0::
		<h4>Throws</h4>
		<table >
			<tbody>
				::foreach td m.docs.throws::
				<tr>
					<th><a href="::raw td.uri::"><code>::td.name::</code></a></th>
					<td>::raw td.desc::</td>
				</tr>
				::end::
		  </tbody>
		</table>
		::end::


		$$commonMetaAttribtues(::m::)

	::end::

		
	</macro>


	<macro name="commonMetaAttribtues(m)">
			<!-- requires -->
		::if m.docs.requires.length != 0::
		<h4>Requires</h4>
		<table >
			<tbody>
		::foreach i m.docs.requires::
			<tr><th>::raw i::</th></tr>
		::end::
		 </tbody>
		</table>
		::end::

		<!-- see -->
		::if m.docs.see.length != 0::
		<h4>See Also</h4>
		<table >
			<tbody>
		::foreach i m.docs.see::
			<tr><th>::raw i::</th></tr>
		::end::
		</tbody>
		</table>
		::end::

		
		<!-- authors -->
		::if m.docs.authors.length != 0::
		<h4>Authors</h4>
		<table >
			<tbody>
		::foreach i m.docs.authors::
			<tr><th>::raw i::</th></tr>
		::end::
		</tbody>
		</table>
		::end::
		<!-- meta -->
		::if m.docs.meta.length != 0::
		<h4>Metadata</h4>
		<table >
			<tbody>
		::foreach i m.docs.meta::
			<tr>
				<th><code>::i.name::</code></th>
				<td>::i.value::</td>
			</tr>
		::end::
		</tbody>
		</table>
		::end::
			
		<!-- platforms -->
		::if m.platforms != null::
			::if m.platforms.length != 0 && (platforms == null || platforms.length > m.platforms.length) ::
			<h4>Platforms</h4>
			<table >
				<tbody>
					<tr>
					<th>
				::foreach p m.platforms::
				::if !repeat.p.first::, ::end:: ::p::
				::end::
				</th>
				</tr>
				</tbody>
			</table>
			::end::
		::end::


		
		<!-- TODO block -->
		::if m.docs.todos.length != 0::
		<div class="todos">
			<h4>Todos:</h4>
			<ul>
				::foreach i m.docs.todos::
				<li>::raw i::</li>
				::end::
			</ul>
		</div>
		::end::

	</macro>

	<macro name="varHeader(f)">
		<h3 >
			<a name="::f.name::"></a>$$showAccess(::f::) var <span class="name">::f.name::</span> ::raw f.rights:: : ::raw f.returns::
		</h3>
		::if f.isInherited::
		<div class="inherited">&#x21b3; Inherited from <a href="::raw f.inheritance.link.href::#::f.name::">::raw f.inheritance.link.text::.::f.name::</a></div>
		::end::
	</macro>

	<macro name="varDocs(m)">

		::if m.docs != null::
			<!-- deprecated -->
			::if m.docs.deprecated::
				<span class="deprecated"><h4>This ::m.type:: is deprecated.</h4>::raw m.docs.deprecatedMsg::</span>
			::end::

			<!-- Comment block -->
			::if m.docs.comments != null::
			<div class="comment">::raw m.docs.comments::</div>
			::end::

			$$commonMetaAttribtues(::m::)

		::end::

	</macro>

	<macro name="enumConstructor(m)">
		<h3>
			<a name="::raw m.name::()"></a>::name::.<span class="name">::raw m.name::</span>::if m.args.length > 0::(::raw m.args::)::end::
		</h3>
	</macro>





	<macro name="showPlatforms(l)">
		::if l != null::
			::if l.length > 0 && (platforms == null || platforms.length > l.length) ::
			<div class="platforms">available in <span class="platforms-list">::foreach i l::::i:: ::end::</span></div>
			::end::
		::end::
	</macro>



	<macro name="showAccess(f)">
		::if type == "class" && (!f.isPrivate || config.developer)::
		<span class="::f.access::">::if f.isStatic::static ::end::$$showInline(f) $$showDynamic(f)  ::f.access::</span>
		::end::
	</macro>

	<macro name="showDynamic(m)">
		::if m.isDynamic::
		<span class="dynamic">dynamic</span>
		::end::
	</macro>

	<macro name="showInline(f)">
		::if f.isInline::
		<span class="inline">inline</span>
		::end::
	</macro>


	<!--
		The following methods are for typedef.mtt, which are handled
		differently than classes or enums
	-->
	<macro name="dumpPlatformsOrAll(all, l)">
		::if l == null || l.length == 0 || l.length == all.length::
			::foreach i all::::i:: ::end::
		::else::
			::foreach i l::::i:: ::end::
		::end::
	</macro>

	<macro name="typedefVarHeader(f)">
		<h3>
			<a name="::f.name::"></a><span class="keyword">var</span> <span class="name">::f.name::</span> : ::raw f.returns::
		</h3>
	</macro>

	<!-- Displays only if platform list [l] is of different length of [all] -->
	<macro name="displayPlatformsIfDifferent(l, all)">
		::if l.length != all.length::
			<div class="platforms">available in <span class="platforms-list">::foreach i l::::i:: ::end::</span></div>
		::end::
	</macro>


	<macro name="createPackageTypes(allTypes)">

		::set containsInterfaces=false::
		::set containsClasses=false::
		::set containsAliases=false::
		::set containsEnums=false::
		::set containsTypedefs=false::

		::if allTypes != null && allTypes.length > 0::
			::foreach i allTypes::
				::if i.type == "interface":: ::set containsInterfaces=true::
				::elseif i.type == "class":: ::set containsClasses=true::
				::elseif i.type == "alias":: ::set containsAliases=true::
				::elseif i.type == "enum":: ::set containsEnums=true::
				::elseif i.type == "typedef":: ::set containsTypedefs=true::
				::end::
			::end::
		::end::
	</macro>
	<macro name="createPackageTypeDropdown(name)">

		<form name="nav_::name::" > Links:&nbsp;&nbsp;
			<select name="selectType" onChange="scrollToAnchor(document.nav_::name::.selectType.options[document.nav_::name::.selectType.selectedIndex].value)">
			::if containsInterfaces::
				<option value="interfaces">Interfaces</option>
			::end::
			::if containsClasses::
				<option value="classes">Classes</option>
			::end::
			::if containsAliases::
				<option value="aliases">Aliases</option>
			::end::
			::if containsEnums::
				<option value="enums">Enums</option>
			::end::
			::if containsTypedefs::
				<option value="typedefs">Typedefs</option>
			::end::
			</select>
			
		</form>

	</macro>

	<macro name="createPackageGroups(allTypes, includeTop)">

		::if allTypes != null && allTypes.length > 0::
			::if containsInterfaces==true::
				<a name="interfaces"></a>
				$$createPackageGroup(::allTypes::, interface, Interfaces, ::includeTop::)
			::end::
			::if containsClasses==true::
				<a name="classes"></a>
				$$createPackageGroup(::allTypes::, class, Classes, ::includeTop::)
			::end::
			::if containsAliases==true::
				<a name="aliases"></a>
				$$createPackageGroup(::allTypes::, alias, Aliases, ::includeTop::)
			::end::
			::if containsEnums==true::
				<a name="enums"></a>
				$$createPackageGroup(::allTypes::, enum, Enums, ::includeTop::)
			::end::
			::if containsTypedefs==true::
				<a name="typedefs"></a>
				$$createPackageGroup(::allTypes::, typedef, Typedefs, ::includeTop::)
			::end::
		::end::
	</macro>

	<macro name="createPackageGroup(allTypes, type ,title, includeBackToTop)">

		<div class="member packageMember">
			<div class="header packageHeader">
				<h3 class="::type::">::title::</h3>
			</div>
			<div class="packageBody">
				<table>
					<tbody>
					::foreach i allTypes::
						::if i.type == type::
						<tr >
							<th><a href="::packageHrefRoot::types/::i.subdir::::i.name::::raw config.htmlFileExtension::" title="::i.name::" target="classFrame">::i.name::</a></th>
							::if i.docs != null && i.docs.comments != null::
							<td>::raw i.docs.comments.split("\n")[0]::...</td>
							::else::
							<td ><span class="unavailable"></span></td>
							::end::
						</tr>
						::end::
					::end::
					</tbody>
				</table>
			</div>
			::if includeBackToTop == "true" ::<p class="back-to-top" onClick="scrollToAnchor('package-top')">^ Back to top</p>::end::
		</div>
		
	</macro>

	<!--
		Debug Macros
	-->
	<macro name="debugPlatforms(l)">
		::if l == null::
			NO PLATFORM DATA
		::elseif l.length == 0::
			ZERO LENGTH PLATFORM DATA
		::else::
			::foreach i l::::i:: ::end::
		::end::
	</macro>



</macros>